import React from 'react';
import { Button, Table, Space, Row, Col, Typography, Modal, Grid } from 'antd';
import { PlusOutlined, EditOutlined, DeleteOutlined } from '@ant-design/icons';
// Temporary stub component to replace missing SegmentBuilder
const SegmentBuilder: React.FC<any> = () => (
  <div style={{ padding: '40px', backgroundColor: '#f5f5f5', borderRadius: '8px', textAlign: 'center' }}>
    <p>üéØ C√¥ng c·ª• x√¢y d·ª±ng ph√¢n kh√∫c kh√°ch h√†ng</p>
    <p style={{ color: '#666', fontSize: '14px' }}>Component ph√¢n kh√∫c kh√°ch h√†ng ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn</p>
  </div>
);

const { Title } = Typography;
const { useBreakpoint } = Grid;

const CustomerSegments: React.FC = () => {
  const [isModalOpen, setIsModalOpen] = React.useState(false);
  const screens = useBreakpoint();
  const isMobile = !screens.lg;

  const columns = [
    { title: 'T√™n ph√¢n kh√∫c', dataIndex: 'name', key: 'name' },
    { title: 'S·ªë l∆∞·ª£ng kh√°ch', dataIndex: 'count', key: 'count' },
    { title: 'Ng√†y t·∫°o', dataIndex: 'createdDate', key: 'createdDate' },
    {
      title: 'H√†nh ƒë·ªông',
      key: 'action',
      render: () => (
        <Space>
          <Button icon={<EditOutlined />} onClick={() => setIsModalOpen(true)} />
          <Button icon={<DeleteOutlined />} danger />
        </Space>
      ),
    },
  ];

  const data = [
    { id: 1, name: 'Kh√°ch h√†ng VIP (Chi ti√™u > 10tr)', count: 150, createdDate: '20/08/2025' },
    { id: 2, name: 'Kh√°ch h√†ng ti·ªÅm nƒÉng (Ch∆∞a mua h√†ng)', count: 2300, createdDate: '15/08/2025' },
    { id: 3, name: 'Kh√°ch h√†ng ƒë√£ l√¢u kh√¥ng mua', count: 540, createdDate: '10/08/2025' },
  ];

  return (
    <>
      <Row justify="space-between" align="middle" style={{ marginBottom: 24 }}>
        <Col>
          <Title level={2}>Ph√¢n kh√∫c Kh√°ch h√†ng</Title>
        </Col>
        <Col>
          <Button type="primary" icon={<PlusOutlined />} onClick={() => setIsModalOpen(true)}>
            {!isMobile && "T·∫°o ph√¢n kh√∫c m·ªõi"}
          </Button>
        </Col>
      </Row>
      <Table columns={columns} dataSource={data} rowKey="id" />
      <Modal
        title="T·∫°o/S·ª≠a Ph√¢n kh√∫c"
        open={isModalOpen}
        onCancel={() => setIsModalOpen(false)}
        footer={null}
        width={800}
      >
        <SegmentBuilder onSave={() => setIsModalOpen(false)} />
      </Modal>
    </>
  );
};

export default CustomerSegments;
